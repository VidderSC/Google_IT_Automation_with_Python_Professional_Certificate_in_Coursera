- Skipping the Stagin Area.

If we want to commit all the modified tracked files without needing to "add"
them first, we can use the "-a" modifier on the "git commit" command.
- Example:

git commit -a

* Note: This command will NOT work on new "untracked" files.
For the untracked files we will always have to "git add" first.

When commiting tracked files this way, we can also add the "-m" modifier to
add the message directly.
- Example:

git commit -a -m "Doing add, commit and message, all at once!"


** If you are asking yourself what the HEAD means, let's clarify it:

Git uses the HEAD alias to represent the currently 
checked-out snapshot of your project.

Think about it as a bookmark, that point us to the current branch.

-------------------------------------------------------------------------------

- Getting more information about our changes.

Lets look at our current log:

git log

"""

commit 212946b537d6cb15bd9f9fa4c6b8dfe0772aafa5 (HEAD -> main, origin/main, origin/HEAD)
Author: David Som <103112459+VidderSC@users.noreply.github.com>
Date:   Tue Sep 19 23:45:11 2023 +0200

    Moved files to the proper folder.

commit cf4c30cccc8d8cfd9abe45cbf29f5f3032920b10
Author: David Som <103112459+VidderSC@users.noreply.github.com>
Date:   Tue Sep 19 23:44:41 2023 +0200

    Moved files to the proper folder.

commit 29f20eacb5afb80f3e8b6ee5f5bc6e0816b05dd4
Author: David Som <103112459+VidderSC@users.noreply.github.com>
Date:   Tue Sep 19 23:39:39 2023 +0200

    Finished Week 2

"""

If we need to get more information about the changes, we can use the modifier "-p",
it stands for patch and will show us what changes were made to the code:

git log -p

"""

commit 212946b537d6cb15bd9f9fa4c6b8dfe0772aafa5 (HEAD -> main, origin/main, origin/HEAD)
Author: David Som <103112459+VidderSC@users.noreply.github.com>
Date:   Tue Sep 19 23:45:11 2023 +0200

    Moved files to the proper folder.

diff --git a/Introduction_to_Git_and_GitHub/Week_1_Introduction_to_Version_Control/QwikLab - Introduction to Git.txt b/Introduction_to_Git_and_GitHub/Week_1_Introduction_to_Version_Control/QwikLab - Introduction to Git.txt
new file mode 100644
index 0000000..17fef71
--- /dev/null
+++ b/Introduction_to_Git_and_GitHub/Week_1_Introduction_to_Version_Control/QwikLab - Introduction to Git.txt
@@ -0,0 +1,366 @@
+Introduction to Git
+
+- Introduction:
+In this scenario, you are a project lead in an IT company. 
+You and your team are working on a huge project, which consists 
+of multiple functionalities and modules... 
# There is more text but I will not put everything else here to make it short and sweet.

diff --git a/Introduction_to_Git_and_GitHub/Week_1_Introduction_to_Version_Control/README b/Introduction_to_Git_and_GitHub/Week_1_Introduction_to_Version_Control/README
new file mode 100644
index 0000000..08372ce
--- /dev/null
+++ b/Introduction_to_Git_and_GitHub/Week_1_Introduction_to_Version_Control/README
@@ -0,0 +1,3 @@
+This is my first repository.
+
+A repository is a location where all the files of a particular project are stored.
\ No newline at end of file

commit cf4c30cccc8d8cfd9abe45cbf29f5f3032920b10
Author: David Som <103112459+VidderSC@users.noreply.github.com>
Date:   Tue Sep 19 23:44:41 2023 +0200

    Moved files to the proper folder.

diff --git a/Introduction_to_Git_and_GitHub/Week_2_Using_Git_Locally/QwikLab - Introduction to Git.txt b/Introduction_to_Git_and_GitHub/Week_2_Using_Git_Locally/QwikLab - Introduction to Git.txt
deleted file mode 100644
index 17fef71..0000000
--- a/Introduction_to_Git_and_GitHub/Week_2_Using_Git_Locally/QwikLab - Introduction to Git.txt
+++ /dev/null
@@ -1,366 +0,0 @@
-Introduction to Git
-
-- Introduction:
-In this scenario, you are a project lead in an IT company. 
-You and your team are working on a huge project, which consists 
-of multiple functionalities and modules...
\ No newline at end of file

commit 29f20eacb5afb80f3e8b6ee5f5bc6e0816b05dd4
Author: David Som <103112459+VidderSC@users.noreply.github.com>
Date:   Tue Sep 19 23:39:39 2023 +0200

    Finished Week 2

diff --git a/Introduction_to_Git_and_GitHub/Week_2_Using_Git_Locally/QwikLab - Introduction to Git.txt b/Introduction_to_Git_and_GitHub/Week_2_Using_Git_Locally/QwikLab - Introduction to Git.txt
new file mode 100644
index 0000000..17fef71
--- /dev/null
+++ b/Introduction_to_Git_and_GitHub/Week_2_Using_Git_Locally/QwikLab - Introduction to Git.txt
@@ -0,0 +1,366 @@
+Introduction to Git
+
+- Introduction:
+In this scenario, you are a project lead in an IT company. 
+You and your team are working on a huge project, which consists 
+of multiple functionalities and modules...

"""


With git show commitID we can show the log for that specific commit.
the commitID is the long alfanumeric text that appears next to the word commit.
For example:
On commit 29f20eacb5afb80f3e8b6ee5f5bc6e0816b05dd4
the ID is: 29f20eacb5afb80f3e8b6ee5f5bc6e0816b05dd4

another flag that we can use with git log is --stat

git log --stat

"""

commit 212946b537d6cb15bd9f9fa4c6b8dfe0772aafa5 (HEAD -> main, origin/main, origin/HEAD)
Author: David Som <103112459+VidderSC@users.noreply.github.com>
Date:   Tue Sep 19 23:45:11 2023 +0200

    Moved files to the proper folder.

 .../QwikLab - Introduction to Git.txt              | 366 +++++++++++++++++++++
 .../Week_1_Introduction_to_Version_Control/README  |   3 +
 2 files changed, 369 insertions(+)

commit cf4c30cccc8d8cfd9abe45cbf29f5f3032920b10
Author: David Som <103112459+VidderSC@users.noreply.github.com>
Date:   Tue Sep 19 23:44:41 2023 +0200

    Moved files to the proper folder.

 .../QwikLab - Introduction to Git.txt              | 366 ---------------------
 .../Week_2_Using_Git_Locally/README                |   3 -
 2 files changed, 369 deletions(-)

commit 29f20eacb5afb80f3e8b6ee5f5bc6e0816b05dd4
Author: David Som <103112459+VidderSC@users.noreply.github.com>
Date:   Tue Sep 19 23:39:39 2023 +0200

    Finished Week 2

 .../QwikLab - Introduction to Git.txt              | 366 +++++++++++++++++++++
 .../Week_2_Using_Git_Locally/README                |   3 +
 2 files changed, 369 insertions(+)

commit 01d247e0360d4e973a8bb1b928b736eaef5ba5a9
Author: David Som <103112459+VidderSC@users.noreply.github.com>
Date:   Tue Sep 19 22:33:31 2023 +0200

    deleted test file

 Introduction_to_Git_and_GitHub/Week_2_Using_Git_Locally/test.txt | 1 -
 1 file changed, 1 deletion(-)
 
"""

If we want to check what are the changes that we have made to modified tracked
files that we haven't staged yet, we can use the "git diff" command.

This "git diff" command will show us information as the "diff -u" that we 
learned on the previous module.

if we want to see the changes made on files that are staged but not commited,
we use "git diff --staged"


-------------------------------------------------------------------------------

- Deleting and Renaming Files.

We can remove files with the "git rm" command.
* Example:
git rm filename.txt


To rename files we use the "git mv" command.
It works like the "mv" command on linux and also can be used to move files.
* Example:
git mv filename.txt new_filename.txt


* Note:
In both cases the files will be staged automatically for us just to commit the
changes to the repo.


We can use the ".gitignore" file to ignore files that we do not want to add to
our repository. We can add those files inside the .gitignore file, to tell Git
which files to skip and not to add to the current repo.

For example, on Mac we most probably want to ignore the ".DS_STORE" file and
to do this we will add it to the .gitignore file.

When we initialize a Git repository, the .gitignore file might not be created 
yet so, we can create it ourselves and add the files to ignore one per line.
