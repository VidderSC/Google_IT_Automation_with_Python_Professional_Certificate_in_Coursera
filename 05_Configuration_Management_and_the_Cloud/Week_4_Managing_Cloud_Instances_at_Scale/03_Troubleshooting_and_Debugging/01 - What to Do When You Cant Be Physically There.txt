- What to Do When You Can't Be Physically There:

If you're used to troubleshooting problems on physical computers. It can take a bit of a mindset shift to get used to fixing problems with virtual machines running in the cloud. 

There's a bunch of things that you can't do, you can't walk up to a server and check out what's wrong with it. But there's also other things that are a lot simpler when troubleshooting VMs in the cloud like: 
· Adding more memory
· Moving the machine to a different data center. 

Let's say that after the latest upgrade, a bunch of your cloud VMs have stopped booting. Something went wrong, but you don't know exactly what. You can't connect to the instances or boot them in rescue mode so, 

- What can you do? 
There's a bunch of options.

If you're following the infrastructure as code practices that we've talked about, you could deploy new VMs with the previous version of the system, this would help us get back to a healthy state as quickly as possible. 

On top of this, you want to understand the problem and how to fix it. To do that, you can create a snapshot of the disk image for one of the failing VMs and then mount that disk image on a healthy machine. 

That way you can analyze the contents of the image and figure out what's causing the failures. 
It's not always easy to know which piece of the system is causing a failure, especially if the system is complex with many different services interacting with each other. 

If you're trying to figure out what's causing your complex servers to respond with a ton of 500s, you need to look at different pieces individually until you find the culprit:
· Does the problem happen if you run the service and a test VM? 
· Without any load balancers or caching servers in between? 
· Does it happen if you run the service locally on your workstation? 

The more you can isolate the faulty behavior, the easier it is to fix it. 

You should remember that problems will happen, it makes sense to spend some time getting ready for them. 
Setting up a testing environment might take time and effort, so it's a good idea to do this in advance before any problem actually happens. That way you don't need to do it under pressure when your users are complaining that the system's down. 

Say you're using a database service that's only reachable from inside your cloud network. This means you can't interact with it directly from the outside, only from instances within your cloud infrastructure. 
If your service starts acting up, you might want to check the responses from the database directly, rather than going through any of the other back-end servers. To do this, you'll need to have a debugging machine in the network and you'll need to use tools to interact with the database directly. 

Again, setting the machine up, and learning how to use the tools takes time so, get ahead of the game and do it in advance before any problems come up. 

You might remember from the "Troubleshooting and Debugging" course, that understanding logs is super important for being able to solve problems in IT.

When you run your service in the cloud, you need to learn where to find the logs that the provider keeps and what info is available in which logs. 
Some cloud providers offer centralized log solutions to collect all your logs in one place. You can have all your notes, send info, warning and error messages to the log collection point then, when you're trying to debug a problem, you can easily see everything that was going on when the error occurred.