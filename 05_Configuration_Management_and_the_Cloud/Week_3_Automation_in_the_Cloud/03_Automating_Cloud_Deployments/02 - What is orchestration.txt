- What is orchestration?

Throughout this course and the entire program, we've been talking about automation.

- Automation:
The process of replacing a manual step with one that happens automatically. 

In the past few modules, we've mentioned a few ways that let us automate the creation of Cloud instances:
· We can use templating to create new virtual machines, 
· We can run a Cli tool that automatically creates new instances for us,
· We can choose to enable auto-scaling and let the infrastructure tools take 
  care of that depending on the demand. 

But all of this automatic creation of new instances needs to be coordinated so that the instances correctly interact with each other and that's where "orchestration" comes into play. 

- Orchestration:
The automated configuration and coordination of complex IT systems and services. 

In other words, orchestration means automating a lot of different things that need to talk to each other. This will always include a lot of different automated tasks and will generally involve configuring a bunch of different systems. 

Taking the example of the website infrastructure that we saw in our last module, we've seen how we can automate the creation of each instance in the system. 
Now, say you wanted to deploy a new copy of the system in a separate data center where you have no instances yet, you'll need to also automate the whole configuration of the system, the different instance types involved, how will each instance finesse the others, what the internal network looks like, and so on. 

- How does this work? 
The key here is that the configuration of the overall system needs to be automatically repeatable. 

There's a bunch of different tools that we can use to do that. These tools typically don't communicate with the Cloud systems through the web interface or the command line. They normally use an "application programming interface" or "API" that lets us interact with the Cloud infrastructure directly from our scripts. 

We'll talk more about other APIs in a later course. 

In the case of Cloud provider APIs, they typically let you handle the configuration that you want to sit directly from your scripts or programs without having to call a separate command. This combines the power of programming with all of the available Cloud resources. 

The APIs offered by the Cloud providers let us perform all the tasks that we mentioned earlier like creating, modifying, and deleting instances and also deploying complex configurations for how these instances will talk to each other. 
All of these actions can also be completed through the web interface or the command line. But doing them from our programs gives us extra flexibility which can be key when automating complex setups. 

Say you wanted to deploy a system that combines some services running on a Cloud provider and some services running on-premise, this is known as a "hybrid Cloud" setup, or only part of the services are in the Cloud. 
The setup is super common in the industry right now. Orchestration tools can be a pretty useful tool to make sure that both the on-premise services and the Cloud services know how to talk to each other and are configured with the right settings. 
Going back to the website example that we discussed earlier to make sure that the service is running smoothly, we should set up a monitoring and alerting. This lets us detect and correct any problems with our service before users even notice. This is a critical piece of infrastructure but setting it up correctly can take quite some time. 
By using orchestration tools, we can automate the configuration of any monitoring rules that we need to set, which metrics we want to look for, when we want to be alerted, and so on, and automatically apply these to a complete deployment no matter which datacenter the services are running in. This might seem like a super complex task, but fortunately there are tools available to make our lives easier. 
We'll talk about those in our next module.