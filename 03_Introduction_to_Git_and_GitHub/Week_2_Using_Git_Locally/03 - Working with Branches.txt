- Deleting branches:

We can delete a branch that we don't need anymore by using the "-d" flag
when calling the "git branch" command.

$ git branch -d new-test-branch 
Deleted branch new-test-branch (was 95fd3fe).

$ git branch
* main
  new-feature

If there are changes in the branch we want to delete that haven't been merged
back into the master branch, git will let us know with an error.

$ git branch -d new-feature 
error: The branch 'new-feature' is not fully merged.
If you are sure you want to delete it, run 'git branch -D new-feature'.


- Merging branches:

Merging
The term that Git uses for combining branched data and history together.

To merge a branch into the current branch, we use the "git merge" command,
followed by the name of the branch that we want to merge.

We need to make sure that we are in the branch that we want to merge that
other branch with.

$ git branch
* main
  new-feature

$ git merge new-feature 
Updating 7689eff..2b0916e
Fast-forward
 .../Week_2_Using_Git_Locally/03_test_script.py                      | 6 ++++++
 1 file changed, 6 insertions(+)
 create mode 100644 Introduction_to_Git_and_GitHub/Week_2_Using_Git_Locally/03_test_script.py

 $ git branch
* main
  new-feature

Now that we have merged the branches together, we can delete it if we
no longer need it.

$ git branch -d new-feature 
Deleted branch new-feature (was 2b0916e).

$ git branch
* main


Git uses two different algorithms to perform a merge:
Fast-forward and three-way merge.

The merge that we have realized previously is a Fast-forward merge.

