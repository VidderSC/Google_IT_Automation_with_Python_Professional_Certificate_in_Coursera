- Planning Future Resource Usage:

We discussed in earlier modules what we can do when our programs are misusing resources like memory, disk, network, or CPU. 

But sometimes, it's not a question of misusing resources, but rather missing resources. 
- A database server is expected to use more disk storage as more data gets stored. 
- A web server is expected to use more network bandwidth as the service grows in popularity. 

If you're dealing with a service that's expected to grow and will acquire more resources in the future, it makes sense to spend some time thinking about what that might look like. 
Planning ahead will prepare you for when you need additional resources, instead of having to scramble for them at the last minute. 

Lets say the database growth is expected to be one megabyte per day, and you have 500 megabytes of free-space. You can use that storage for almost two years. 
But if the growth is expected to be 10 megabytes per day and you only have those 500 megabytes available, then you need to start figuring out a plan that will allow your database to keep growing at that pace. Otherwise, you run out of space in a couple of months. 

Once you've figured out the current usage and the expected growth, don't forget to write this down so you can refer to it in the future and check if anything has changed. 
If you find that you'll soon be running out of space, what you'll do next will depend on what the system does, and the importance of the data.

You might decide that you don't really want to store all that data, and instead clean up anything that's not really necessary, or you might decide that you really need to have a lot more storage available. 
In that case, you might opt for buying a network attached storage or NAS that can be attached to your server for additional disk space. 

Migrating to a different type of storage takes time, and can be tricky to do right under pressure. So it's important to do this kind of planning in advance and not wait until the disk is completely full. 
This means monitoring the usage growth of the computer to see if there are any trends that need attention. 

If the service using the database suddenly becomes very popular, the daily growth can increase so much that we'll need to find a better solution sooner than we thought. 
Our monitoring system should trigger an automatic alert when that's the case. 

An interesting strategy for making the best possible use of resources, is to mix and match the processes that run on the computers, so they make use of all the available resources. 
- If you have a process that's CPU intensive and takes almost all the available 
  CPU on a computer, you can still run processes that are IO intensive, reading and writing a lot of data to the hard drive.
- If you have a service that requires a lot of RAM, you can pair it with 
  another one that uses very little memory, and mostly sends and receives data over the network. 

An alternative for having to deal with all these resources like figuring out when to buy more and how to distribute them, is to migrate those systems to the Cloud. 

Setting up your service to run on the cloud will require some initial setup time, as well as an ongoing cost for the Cloud resources you're using. But while this is more expensive than what you'd pay when running the service on premise, you're basically delegating all your capacity planning needs to your Cloud provider. 
That way, if the initial setup doesn't have enough space, you can simply attach a bigger hard drive. Or if the program needs more RAM, you can just deploy the service in a virtual machine with more memory assigned. 

If you decide that moving to the Cloud is a good way to go for your company, remember that you'll also need to plan for that. 
Migrating your services to run fully or even partially in the Cloud, requires work on your side. So you'll need to decide if and when to make the leap, to avoid your service having an outage because it ran out of resources.