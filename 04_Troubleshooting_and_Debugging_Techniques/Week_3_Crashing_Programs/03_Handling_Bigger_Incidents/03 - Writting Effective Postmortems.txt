- Writting Effective Postmortems:

In our last module, we talked about the importance of communication and documentation when troubleshooting incidence. We called out that if the issue is big enough, we might want to document what happened in a postmortem. 

- Postmortems: 
Documents that describe details of incidents to help us learn from our mistakes. 

When writing a postmortem, the goal isn't to blame whoever caused the incident, but to learn from what happened to prevent the same issue from happening again. 

To do this, we usually document: 
- What happened? 
- Why it happened?
- How it was diagnosed? 
- How it was fixed? 
- What we can do to avoid the same event happening in the future? 

Remember the main goal is to learn from our mistakes. Writing a postmortem isn't about getting someone fired but about making sure that next time we do better. Writing postmortems after dealing with incidence is important because it helps us avoid dealing with them again or at least learn how to deal with the next incident better. While Postmortems are super useful with large incidence, you don't need to wait until something huge happens to write your first postmortem. 

You can practice riding them for any kind of event where there's something to be learned no matter how small. That way, when you need to write a postmortem after a big incident, you know how to concentrate on the things that matter the most. What you can learn from the problem and how you can prevent it in the future. 

- What should you write in a postmortem? 
The exact structure might vary depending on preference and the type of incident that you're dealing with. 

In general, you'll want to include the details of: 
- What caused the issue, 
- What the impact of the issue was, 
- How it got diagnosed, 
- The short-term remediation you applied, 
- The long-term remediation you recommend. 

If the document is long and you're going to share it with a lot of people, you want to include a summary that highlights the root cause, the impact, and what needs to be done to prevent the issue from happening again. 

It's useful to include what went well in postmortems too. When working on a problem, we might realize that it would have been much worse if we didn't have certain tools or systems available. For example, we might say that we were able to solve the problem quickly by doing a roll back to the previous version or that we caught the issue before users even noticed it because we had good monitoring and alerting. Noting the things that went well helps us show that our systems are effective and justifies keeping those systems running. 

Writing a postmortem can sometimes help you understand the services that you're working with much better. Earlier this year, a service I worked on had a large outage and I needed to provide information on what happened. To do this, I needed to parse through hundreds of gigabytes of archive logged data to show that certain data had never been received by the service. Doing this, I realized that I needed to improve the data logged by our tools to give better information and have better reporting. 

You can even practice writing postmortems outside of the IT context. Like, if you bake cookies and they don't turn out as great as you wanted them to, document what you did, what went wrong, what went right, and how you can improve the results in the future. You can do this with any hobby that you have. Maybe photography, 3D printing or brewing your own beer. You don't always need to write the whole thing down. Sometimes a mental note is enough, like if you bike to work and realize wearing your backpack hurts your shoulders, make a mental note to add a basket to your bike. So you can put your backpack there next time, or if on your last trip it was colder than expected and you forgot to bring a jacket, make a mental note that next time you should check the weather before you leave. 

Once again, remember that the most important part of the postmortem is what we can learn for the future. So if instead of writing a whole document you're creating a one paragraph summary of the incident. Remember to focus that paragraph on what you can do better, not on whatever mistake caused the incident.