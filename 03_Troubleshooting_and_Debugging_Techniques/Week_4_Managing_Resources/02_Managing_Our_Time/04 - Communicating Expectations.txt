- Communicating Expectations:

When you're dealing with an issue that's affecting one or more users, you might feel rushed to meet expectations, except by the people you're helping.

Everyone's got their own ideas of how long it will take you to solve the problem and when they can expect a solution. 
They might be wondering, what's the holdup? 
- If the issue is that the users spilled coffee on their keyboard and needs a new one, the expectation is that replacing the keyboard will be a very small task that will take almost no time. 
- If the issue is that there's a new employee starting soon and they need a new computer setup for them, the expectation is that it will take much longer than replacing a keyboard. 

Even if we have an automated process for setting up new computers, which means there's very little manual work, to have successful interactions with our users, it's important to understand these implicit expectations and let users know if fixing the problem will take longer than they expect. 

Users will be happy if the issue is resolved within their expectations, but will become frustrated if it takes much longer than they thought. But as long as we communicate with them early about the circumstances, they will be able to understand this and manage their time accordingly. 

Say you have to replace a keyboard but you have no spares available. This means, you'll need to buy a new one or maybe even a whole batch to have a spare available next time. 
It's important to communicate upfront to the user that in this case, the replacements will take more time and then figure out how critical getting the replacement is. 

If the user is an accountant, working on the salary deposit order, which needs to be sent to the bank in one hour or nobody gets their payment on time, you might opt for giving them your keyboard while you go and buy another one at the closest hardware store. 

On the flip side, if the user can work on their laptop until the next day when a new batch of keyboards is scheduled to arrive, you don't need to go out of your way to get early replacement. 

It's also important to let users know if there are any conflicting priorities that might delay the response to whatever they need. 

Say a user calls you to request access to a shared resource, but you're in the middle of dealing with an issue that's causing the company's database to be offline. Even if the user request is quick and easy to solve, fixing the database is critical and affects the whole company, so it should take priority.

In this case, make sure you tell the user that you're dealing with a crisis and that you'll help with their request once the crisis is resolved, give them an idea of when they can expect their issue to be fixed so they can plan what to do next. 

As a general rule, communication is key. 
Try to be clear and upfront about when you expect the issue will be resolved, and if for any reason the issue isn't solved by then, explain why and what the new expectation should be. 
Unfortunately, when the issue you're trying to solve involves troubleshooting and debugging, it's usually very hard to give an accurate estimate of how long it will take you to fix the problem. 

- Notice a theme? 
Estimating the time it takes to perform more complicated work is tough. 

A lot of your time will be spent investigating looking into what's going on and figuring out what should be happening. 
In that case, make sure to let users know when they can expect an update on their issue and give them timely updates, if possible it's a really good idea to have users filed the requests through a ticket tracking system. 

Using a system like this has a ton of advantages: 
- Having all the work you need to do in one place lets you organize your tasks by priority. 
- Receiving reports of issues through a system instead of a phone or chat, lets you make better use of your time. 

You can now decide when you'll look at the list of issues instead of getting interrupted in the middle of a task, and when you have an update for an issue that you've been working on, you can easily update the ticket with news without having to track down users to let them know what's up with their request.

Finally, try out some practical shortcuts when dealing with users. 
It makes sense to take some time to think about the work you do and figure out ways to avoid interruptions and save time. 

- Example: 
If a user tells you that their mouse doesn't work, your first instinct might be to go check it yourself and then bring a new one if necessary, but that's a lot of back and forth, instead you could ask the user to bring the faulty mouse to you so that you can test it at your computer and if it's broken change it with a new one or even better, if you trust your users, you might even leave a set of mice, keyboards, and other accessories available for users to take when the one they're using breaks down. 

That's what we do here at Google and it saves us a ton of time and frustration.

Along the same lines, if your company's budget allows, you could have a couple of spare computers ready to be used. That way, when a computer breaks down, you can get the user back to work as quickly as possible, then you can debug the faulty computer at your own pace. But not every issue can be solved by having spare devices. Sometimes spending time on improving your infrastructure can help you get more done in less time. 

Automating processes like: 
- Installing new computers, 
- Setting up new user accounts, 
- Deploying virtual machines, 
- Rolling back changes to previous versions,
can help save you a lot of time when you're responding to an incident.

- More About Making the Best Use of Our Time:

Check out the following link for more information:
Â· Https://blog.rescuetime.com/how-to-prioritize/